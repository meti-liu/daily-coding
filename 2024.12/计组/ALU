module ALU(  
    input signed [31:0] A,     // ALU输入数A  
    input signed [31:0] B,     // ALU输入数B  
    input [4:0] ALUOp,         // ALU操作类型  
    output reg signed [31:0] C, // ALU结果  
    output reg Zero             // 零标志  
);  
    // ALU操作的定义  
    `define ALUOp_add 5'b00001  // 加法操作  
    `define ALUOp_sub 5'b00010  // 减法操作  

    always @(*) begin  
        case (ALUOp)  
            `ALUOp_add: C = A + B;  // 执行加法  
            `ALUOp_sub: C = A - B;  // 执行减法  
            default: C = 32'b0;      // 默认结果为0  
        endcase  
        
        // 设置零标志  
        Zero = (C == 0) ? 1'b1 : 1'b0;  
    end  
endmodule